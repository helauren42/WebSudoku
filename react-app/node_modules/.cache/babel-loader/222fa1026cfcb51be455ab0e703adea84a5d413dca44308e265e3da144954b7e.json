{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport { SOCKET_ADDRESS } from './Const';\n// puzzle -> cells\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cell {\n  constructor() {\n    this.value = null;\n    this.notes = [];\n    this.mod = null; // false or true\n  }\n  fill(_value) {\n    this.value = _value;\n  }\n  addNotes(number) {\n    this.notes.push(number);\n  }\n  rmNotes() {\n    this.notes = [];\n  }\n}\nclass Game {\n  constructor(difficulty) {\n    this.difficulty = difficulty;\n  }\n  updateArrayPuzzle() {}\n}\nclass AbstractBoard {\n  constructor() {\n    this.makeCanvas();\n    this.staticPuzzle = this.getStaticPuzzle();\n    this.dynamicPuzzle = null;\n  }\n  makeCanvas() {\n    let startY;\n    let length;\n    let canvas = document.getElementById('my-canvas');\n    let body_content = document.getElementById('body-content');\n    let parentHeight = body_content.getBoundingClientRect().height;\n    let parentWidth = body_content.getBoundingClientRect().width;\n    if (parentHeight >= parentWidth) {\n      length = parentWidth * 0.8;\n    } else {\n      length = parentHeight * 0.85;\n    }\n    canvas.width = length * 1.1;\n    canvas.height = length * 1.05;\n    canvas.style.position = 'relative';\n    canvas.style.top = `${startY}px`;\n    this.length = length;\n    this.cellLength = length / 9;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    return;\n  }\n  makePuzzleStructure() {\n    let ret = [];\n    for (let i = 1; i <= 9; i++) {\n      let row = [];\n      for (let j = 1; j <= 9; j++) {\n        row.push(new Cell());\n      }\n      ret.push(row);\n    }\n    return ret;\n  }\n  fillPuzzle(sudokuGrid, puzzle) {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        puzzle[y][x].fill(sudokuGrid[y][x]);\n      }\n    }\n  }\n  getStaticPuzzle() {\n    const sudokuGrid = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 9]];\n    let puzzle = this.makePuzzleStructure();\n    this.fillPuzzle(sudokuGrid, puzzle);\n    return puzzle;\n  }\n  makeSudokuGrid(array) {\n    let ret = [];\n    for (let i = 0; array[i]; i++) {\n      const string = array[i];\n      let row = [];\n      for (let j = 0; string[j]; j++) {\n        row.append(parseInt(string[j]));\n      }\n      ret.push(row);\n    }\n  }\n  makeDynamicPuzzle(array) {\n    let puzzle = this.makePuzzleStructure();\n    const sudokuGrid = makeSudokuGrid(array);\n    this.fillPuzzle(array);\n  }\n  clearBoard() {\n    this.ctx.fillStyle = '#bfd2cc';\n    this.ctx.fillRect(10, 10, this.length, this.length);\n  }\n  /**\n   * @param {Cell[][]} puzzle - 2D array of Cell objects\n   */\n  drawPuzzle(puzzle) {\n    this.ctx.fillStyle = '#bfd2cc';\n    this.ctx.fillRect(10, 10, this.length, this.length);\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = '#343d39';\n    this.ctx.stroke();\n    this.ctx.fillStyle = '#455c52';\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        let cellX = x * this.cellLength + 10;\n        let cellY = y * this.cellLength + 10;\n        this.ctx.beginPath();\n        this.ctx.rect(cellX, cellY, this.cellLength, this.cellLength);\n        this.ctx.stroke();\n        const character = String(puzzle[y][x].value);\n        if (character === 0) continue;\n        let midx = cellX + this.cellLength / 2;\n        let midy = cellY + this.cellLength / 2;\n        this.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n        const textSize = this.ctx.measureText(character);\n        let startX = midx - textSize.width / 2;\n        let startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n        this.ctx.fillText(character, startX, startY);\n      }\n    }\n  }\n}\nclass Board extends AbstractBoard {\n  drawStaticPuzzle() {\n    this.drawPuzzle(this.staticPuzzle);\n  }\n  async drawDynamicPuzzle(currentLevel) {\n    console.log(\"drawDynamicPuzzle: \", currentLevel);\n    if (!this.dynamicPuzzle) this.dynamicPuzzle = await this.fetchDynamicPuzzle(currentLevel);\n    this.drawPuzzle(this.dynamicPuzzle);\n  }\n  async fetchDynamicPuzzle(currentLevel) {\n    const url = \"http://\" + SOCKET_ADDRESS + '/fetchPuzzle/' + currentLevel;\n    console.log(url);\n    const arrayPuzzle = await fetch(url).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(JSON.parse(data));\n      return;\n    });\n    console.log('end');\n  }\n}\nexport const HandleBoard = ({\n  activeGame,\n  currentLevel\n}) => {\n  _s();\n  useEffect(() => {\n    let board = new Board();\n    if (!activeGame) {\n      console.log(\"drawing static puzzle\");\n      board.drawStaticPuzzle();\n    } else {\n      console.log(\"drawing dynamic puzzle level: \", currentLevel);\n      board.drawDynamicPuzzle(currentLevel);\n    }\n  }, [activeGame]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(HandleBoard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = HandleBoard;\nvar _c;\n$RefreshReg$(_c, \"HandleBoard\");","map":{"version":3,"names":["useRef","useEffect","SOCKET_ADDRESS","Fragment","_Fragment","jsxDEV","_jsxDEV","Cell","constructor","value","notes","mod","fill","_value","addNotes","number","push","rmNotes","Game","difficulty","updateArrayPuzzle","AbstractBoard","makeCanvas","staticPuzzle","getStaticPuzzle","dynamicPuzzle","startY","length","canvas","document","getElementById","body_content","parentHeight","getBoundingClientRect","height","parentWidth","width","style","position","top","cellLength","ctx","getContext","makePuzzleStructure","ret","i","row","j","fillPuzzle","sudokuGrid","puzzle","y","x","makeSudokuGrid","array","string","append","parseInt","makeDynamicPuzzle","clearBoard","fillStyle","fillRect","drawPuzzle","lineWidth","strokeStyle","stroke","cellX","cellY","beginPath","rect","character","String","midx","midy","font","textSize","measureText","startX","actualBoundingBoxAscent","actualBoundingBoxDescent","fillText","Board","drawStaticPuzzle","drawDynamicPuzzle","currentLevel","console","log","fetchDynamicPuzzle","url","arrayPuzzle","fetch","then","res","json","data","JSON","parse","HandleBoard","activeGame","_s","board","_c","$RefreshReg$"],"sources":["/home/henri/Projects/WebSudoku/react-app/src/HandleBoard.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { SOCKET_ADDRESS } from './Const';\n// puzzle -> cells\n\nclass Cell {\n\tconstructor() {\n\t\tthis.value = null\n\t\tthis.notes = []\n\t\tthis.mod = null; // false or true\n\t}\n\tfill(_value) {\n\t\tthis.value = _value\n\t}\n\taddNotes(number) {\n\t\tthis.notes.push(number)\n\t}\n\trmNotes() {\n\t\tthis.notes = []\n\t}\n}\n\nclass Game {\n\tconstructor(difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}\n\tupdateArrayPuzzle() {\n\t}\n}\n\nclass AbstractBoard {\n\tconstructor() {\n\t\tthis.makeCanvas()\n\t\tthis.staticPuzzle = this.getStaticPuzzle();\n\t\tthis.dynamicPuzzle = null;\n\t}\n\tmakeCanvas() {\n\t\tlet startY;\n\t\tlet length;\n\n\t\tlet canvas = document.getElementById('my-canvas')\n\t\tlet body_content = document.getElementById('body-content')\n\t\tlet parentHeight = body_content.getBoundingClientRect().height\n\t\tlet parentWidth = body_content.getBoundingClientRect().width\n\n\t\tif (parentHeight >= parentWidth) {\n\t\t\tlength = parentWidth * 0.8\n\t\t}\n\t\telse {\n\t\t\tlength = parentHeight * 0.85\n\t\t}\n\t\tcanvas.width = length * 1.1\n\t\tcanvas.height = length * 1.05\n\t\tcanvas.style.position = 'relative'\n\t\tcanvas.style.top = `${startY}px`\n\n\t\tthis.length = length\n\t\tthis.cellLength = length / 9\n\t\tthis.canvas = canvas\n\t\tthis.ctx = canvas.getContext('2d')\n\t\treturn\n\t}\n\tmakePuzzleStructure() {\n\t\tlet ret = []\n\t\tfor (let i = 1; i <= 9; i++) {\n\t\t\tlet row = []\n\t\t\tfor (let j = 1; j <= 9; j++) {\n\t\t\t\trow.push(new Cell())\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret;\n\t}\n\tfillPuzzle(sudokuGrid, puzzle) {\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tpuzzle[y][x].fill(sudokuGrid[y][x])\n\t\t\t}\n\t\t}\n\t}\n\tgetStaticPuzzle() {\n\t\tconst sudokuGrid = [\n\t\t\t[5, 3, 4, 6, 7, 8, 9, 1, 2],\n\t\t\t[6, 7, 2, 1, 9, 5, 3, 4, 8],\n\t\t\t[1, 9, 8, 3, 4, 2, 5, 6, 7],\n\t\t\t[8, 5, 9, 7, 6, 1, 4, 2, 3],\n\t\t\t[4, 2, 6, 8, 5, 3, 7, 9, 1],\n\t\t\t[7, 1, 3, 9, 2, 4, 8, 5, 6],\n\t\t\t[9, 6, 1, 5, 3, 7, 2, 8, 4],\n\t\t\t[2, 8, 7, 4, 1, 9, 6, 3, 5],\n\t\t\t[3, 4, 5, 2, 8, 6, 1, 7, 9]\n\t\t];\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle\n\t}\n\tmakeSudokuGrid(array) {\n\t\tlet ret = []\n\t\tfor (let i = 0; array[i]; i++) {\n\t\t\tconst string = array[i]\n\t\t\tlet row = []\n\t\t\tfor (let j = 0; string[j]; j++) {\n\t\t\t\trow.append(parseInt(string[j]))\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t}\n\tmakeDynamicPuzzle(array) {\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tconst sudokuGrid = makeSudokuGrid(array)\n\t\tthis.fillPuzzle(array)\n\t}\n\tclearBoard() {\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\t}\n\t/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */\n\tdrawPuzzle(puzzle) {\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\n\t\tthis.ctx.lineWidth = 4\n\t\tthis.ctx.strokeStyle = '#343d39'\n\t\tthis.ctx.stroke()\n\n\t\tthis.ctx.fillStyle = '#455c52'\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tlet cellX = x * this.cellLength + 10\n\t\t\t\tlet cellY = y * this.cellLength + 10\n\t\t\t\tthis.ctx.beginPath()\n\t\t\t\tthis.ctx.rect(cellX, cellY, this.cellLength, this.cellLength)\n\t\t\t\tthis.ctx.stroke()\n\n\t\t\t\tconst character = String(puzzle[y][x].value)\n\t\t\t\tif (character === 0)\n\t\t\t\t\tcontinue\n\t\t\t\tlet midx = cellX + (this.cellLength / 2)\n\t\t\t\tlet midy = cellY + (this.cellLength / 2)\n\t\t\t\tthis.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n\t\t\t\tconst textSize = this.ctx.measureText(character)\n\t\t\t\tlet startX = midx - textSize.width / 2;\n\t\t\t\tlet startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n\t\t\t\tthis.ctx.fillText(character, startX, startY)\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Board extends AbstractBoard {\n\tdrawStaticPuzzle() {\n\t\tthis.drawPuzzle(this.staticPuzzle)\n\t}\n\tasync drawDynamicPuzzle(currentLevel) {\n\t\tconsole.log(\"drawDynamicPuzzle: \", currentLevel)\n\t\tif (!this.dynamicPuzzle)\n\t\t\tthis.dynamicPuzzle = await this.fetchDynamicPuzzle(currentLevel);\n\t\tthis.drawPuzzle(this.dynamicPuzzle)\n\t}\n\tasync fetchDynamicPuzzle(currentLevel) {\n\t\tconst url = \"http://\" + SOCKET_ADDRESS + '/fetchPuzzle/' + currentLevel\n\t\tconsole.log(url)\n\t\tconst arrayPuzzle = await fetch(url).then((res) => {\n\t\t\treturn res.json()\n\t\t}\n\t\t).then((data) => {\n\t\t\tconsole.log(JSON.parse(data))\n\t\t\treturn\n\t\t})\n\t\tconsole.log('end')\n\t}\n}\n\nexport const HandleBoard = ({ activeGame, currentLevel }) => {\n\tuseEffect(() => {\n\t\tlet board = new Board();\n\t\tif (!activeGame) {\n\t\t\tconsole.log(\"drawing static puzzle\")\n\t\t\tboard.drawStaticPuzzle()\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"drawing dynamic puzzle level: \", currentLevel)\n\t\t\tboard.drawDynamicPuzzle(currentLevel)\n\t\t}\n\t}, [activeGame])\n\treturn (\n\t\t<></>\n\t)\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}