{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Board } from './Board.js';\nimport { useEffect } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let BOARD = null;\nexport const setClickPos = (clientX, clientY, activeGame, triggerClick, setCanvasClickedX, setCanvasClickedY, setTriggerClick) => {\n  if (!activeGame) return;\n  if (triggerClick == 0) setTriggerClick(1);else setTriggerClick(0);\n  const canvas = document.getElementById(\"my-canvas\");\n  const rect = canvas.getBoundingClientRect();\n  const x = (clientX - rect.left) / (rect.right - rect.left) * canvas.width;\n  const y = (clientY - rect.top) / (rect.bottom - rect.top) * canvas.height;\n  setCanvasClickedX(x);\n  setCanvasClickedY(y);\n};\n\n/**\n * @param {boolean} activeGame\n * @param {number} currentLevel\n * @param {number} clickedX\n * @param {number} clickedY\n * @param {Board|null} BOARD\n*/\nexport const HandleBoard = ({\n  activeGame,\n  currentLevel,\n  canvasClickedX,\n  canvasClickedY,\n  triggerClick,\n  setSelectedCell\n}) => {\n  _s();\n  console.log(\"handleBoard called\");\n  useEffect(() => {\n    if (!BOARD) BOARD = new Board();\n    if (activeGame) if (BOARD.updateSelection(canvasClickedX, canvasClickedY)) setSelectedCell(true);else setSelectedCell(false);\n  }, [canvasClickedX, canvasClickedY, triggerClick]);\n  useEffect(() => {\n    if (!BOARD) BOARD = new Board();\n    if (!activeGame) BOARD.giveUp();\n  }, [activeGame]);\n  useEffect(() => {\n    if (!BOARD) BOARD = new Board();\n    BOARD.draw(activeGame, currentLevel);\n  }, [activeGame, canvasClickedX, canvasClickedY, triggerClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(HandleBoard, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n_c = HandleBoard;\nvar _c;\n$RefreshReg$(_c, \"HandleBoard\");","map":{"version":3,"names":["Board","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","BOARD","setClickPos","clientX","clientY","activeGame","triggerClick","setCanvasClickedX","setCanvasClickedY","setTriggerClick","canvas","document","getElementById","rect","getBoundingClientRect","x","left","right","width","y","top","bottom","height","HandleBoard","currentLevel","canvasClickedX","canvasClickedY","setSelectedCell","_s","console","log","updateSelection","giveUp","draw","_c","$RefreshReg$"],"sources":["/home/henri/Projects/WebSudoku/react-app/src/HandleBoard.js"],"sourcesContent":["import { Board } from './Board.js';\nimport { useEffect } from 'react';\n\nexport let BOARD = null\n\n\nexport const setClickPos = (clientX, clientY, activeGame, triggerClick, setCanvasClickedX, setCanvasClickedY, setTriggerClick) => {\n\tif (!activeGame)\n\t\treturn\n\tif (triggerClick == 0)\n\t\tsetTriggerClick(1)\n\telse\n\t\tsetTriggerClick(0)\n\tconst canvas = document.getElementById(\"my-canvas\")\n\tconst rect = canvas.getBoundingClientRect()\n\tconst x = ((clientX - rect.left) / (rect.right - rect.left)) * canvas.width\n\tconst y = ((clientY - rect.top) / (rect.bottom - rect.top)) * canvas.height\n\tsetCanvasClickedX(x);\n\tsetCanvasClickedY(y);\n}\n\n/**\n * @param {boolean} activeGame\n * @param {number} currentLevel\n * @param {number} clickedX\n * @param {number} clickedY\n * @param {Board|null} BOARD\n*/\nexport const HandleBoard = ({ activeGame, currentLevel, canvasClickedX, canvasClickedY, triggerClick, setSelectedCell }) => {\n\tconsole.log(\"handleBoard called\")\n\n\tuseEffect(() => {\n\t\tif (!BOARD)\n\t\t\tBOARD = new Board()\n\t\tif (activeGame)\n\t\t\tif (BOARD.updateSelection(canvasClickedX, canvasClickedY))\n\t\t\t\tsetSelectedCell(true)\n\t\t\telse\n\t\t\t\tsetSelectedCell(false)\n\t}, [canvasClickedX, canvasClickedY, triggerClick])\n\tuseEffect(() => {\n\t\tif (!BOARD)\n\t\t\tBOARD = new Board()\n\t\tif (!activeGame)\n\t\t\tBOARD.giveUp();\n\t}, [activeGame])\n\tuseEffect(() => {\n\t\tif (!BOARD)\n\t\t\tBOARD = new Board()\n\t\tBOARD.draw(activeGame, currentLevel)\n\t}, [activeGame, canvasClickedX, canvasClickedY, triggerClick])\n\treturn (\n\t\t<></>\n\t)\n}\n\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,YAAY;AAClC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,IAAIC,KAAK,GAAG,IAAI;AAGvB,OAAO,MAAMC,WAAW,GAAGA,CAACC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,eAAe,KAAK;EACjI,IAAI,CAACJ,UAAU,EACd;EACD,IAAIC,YAAY,IAAI,CAAC,EACpBG,eAAe,CAAC,CAAC,CAAC,MAElBA,eAAe,CAAC,CAAC,CAAC;EACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;EACnD,MAAMC,IAAI,GAAGH,MAAM,CAACI,qBAAqB,CAAC,CAAC;EAC3C,MAAMC,CAAC,GAAI,CAACZ,OAAO,GAAGU,IAAI,CAACG,IAAI,KAAKH,IAAI,CAACI,KAAK,GAAGJ,IAAI,CAACG,IAAI,CAAC,GAAIN,MAAM,CAACQ,KAAK;EAC3E,MAAMC,CAAC,GAAI,CAACf,OAAO,GAAGS,IAAI,CAACO,GAAG,KAAKP,IAAI,CAACQ,MAAM,GAAGR,IAAI,CAACO,GAAG,CAAC,GAAIV,MAAM,CAACY,MAAM;EAC3Ef,iBAAiB,CAACQ,CAAC,CAAC;EACpBP,iBAAiB,CAACW,CAAC,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAC;EAAElB,UAAU;EAAEmB,YAAY;EAAEC,cAAc;EAAEC,cAAc;EAAEpB,YAAY;EAAEqB;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3HC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAEjClC,SAAS,CAAC,MAAM;IACf,IAAI,CAACK,KAAK,EACTA,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACpB,IAAIU,UAAU,EACb,IAAIJ,KAAK,CAAC8B,eAAe,CAACN,cAAc,EAAEC,cAAc,CAAC,EACxDC,eAAe,CAAC,IAAI,CAAC,MAErBA,eAAe,CAAC,KAAK,CAAC;EACzB,CAAC,EAAE,CAACF,cAAc,EAAEC,cAAc,EAAEpB,YAAY,CAAC,CAAC;EAClDV,SAAS,CAAC,MAAM;IACf,IAAI,CAACK,KAAK,EACTA,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACpB,IAAI,CAACU,UAAU,EACdJ,KAAK,CAAC+B,MAAM,CAAC,CAAC;EAChB,CAAC,EAAE,CAAC3B,UAAU,CAAC,CAAC;EAChBT,SAAS,CAAC,MAAM;IACf,IAAI,CAACK,KAAK,EACTA,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACpBM,KAAK,CAACgC,IAAI,CAAC5B,UAAU,EAAEmB,YAAY,CAAC;EACrC,CAAC,EAAE,CAACnB,UAAU,EAAEoB,cAAc,EAAEC,cAAc,EAAEpB,YAAY,CAAC,CAAC;EAC9D,oBACCN,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAEP,CAAC;AAAA8B,EAAA,CA1BYL,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}