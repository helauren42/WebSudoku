{"ast":null,"code":"import{useRef,useEffect}from'react';import{GameState}from\"./Const\";// puzzle -> blocks -> cells\nimport{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";class Cell{constructor(){this.value=null;this.notes=[];this.mod=null;// false or true\n}fill(_value){this.value=_value;}addNotes(number){this.notes.push(number);}rmNotes(){this.notes=[];}}class Game{constructor(difficulty){this.difficulty=difficulty;}updateArrayPuzzle(){}}class AbstractBoard{constructor(){this.makeCanvas();this.staticPuzzle=this.getStaticPuzzle();this.dynamicPuzzle=null;}makeCanvas(){let startY;let length;let canvas=document.getElementById('my-canvas');let body_content=document.getElementById('body-content');let parentHeight=body_content.getBoundingClientRect().height;let parentWidth=body_content.getBoundingClientRect().width;if(parentHeight>=parentWidth){length=parentWidth*0.8;}else{length=parentHeight*0.85;}canvas.width=length*1.1;canvas.height=length*1.05;canvas.style.position='relative';canvas.style.top=`${startY}px`;this.length=length;this.cellLength=length/9;this.canvas=canvas;this.ctx=canvas.getContext('2d');return;}makePuzzleStructure(){let ret=[];for(let i=1;i<=9;i++){let row=[];for(let j=1;j<=9;j++){row.push(new Cell());}ret.push(row);}return ret;}fillPuzzle(sudokuGrid,puzzle){for(let y=0;y<9;y++){for(let x=0;x<9;x++){puzzle[y][x].fill(sudokuGrid[y][x]);}}}getStaticPuzzle(){const sudokuGrid=[[5,3,4,6,7,8,9,1,2],[6,7,2,1,9,5,3,4,8],[1,9,8,3,4,2,5,6,7],[8,5,9,7,6,1,4,2,3],[4,2,6,8,5,3,7,9,1],[7,1,3,9,2,4,8,5,6],[9,6,1,5,3,7,2,8,4],[2,8,7,4,1,9,6,3,5],[3,4,5,2,8,6,1,7,9]];let puzzle=this.makePuzzleStructure();this.fillPuzzle(sudokuGrid,puzzle);return puzzle;}/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */drawPuzzle(puzzle){this.ctx.fillStyle='#bfd2cc';this.ctx.fillRect(10,10,this.length,this.length);this.ctx.lineWidth=4;this.ctx.strokeStyle='#343d39';this.ctx.stroke();this.ctx.fillStyle='#455c52';for(let y=0;y<9;y++){for(let x=0;x<9;x++){let cellX=x*this.cellLength+10;let cellY=y*this.cellLength+10;this.ctx.beginPath();this.ctx.rect(cellX,cellY,this.cellLength,this.cellLength);this.ctx.stroke();const character=String(puzzle[y][x].value);if(character==0)continue;let midx=cellX+this.cellLength/2;let midy=cellY+this.cellLength/2;this.ctx.font=`${this.cellLength*0.8}px Roboto Slab`;const textSize=this.ctx.measureText(character);let startX=midx-textSize.width/2;let startY=midy+(textSize.actualBoundingBoxAscent-textSize.actualBoundingBoxDescent)/2;this.ctx.fillText(character,startX,startY);}}}}class Board extends AbstractBoard{constructor(){super();}drawStaticPuzzle(){this.drawPuzzle(this.staticPuzzle);}drawDynamicPuzzle(){// if(!this.dynamicPuzzle)\n// \tthis.fetchDynamicPuzzle();\nthis.drawPuzzle(this.dynamicPuzzle);}}export const HandleBoard=_ref=>{let{activeGame}=_ref;useEffect(()=>{let board=new Board();if(!activeGame){console.log(\"drawing static puzzle\");board.drawStaticPuzzle();}else{console.log(\"drawing dynamic puzzle\");board.drawDynamicPuzzle();}},[activeGame]);return/*#__PURE__*/_jsx(_Fragment,{});};","map":{"version":3,"names":["useRef","useEffect","GameState","Fragment","_Fragment","jsx","_jsx","Cell","constructor","value","notes","mod","fill","_value","addNotes","number","push","rmNotes","Game","difficulty","updateArrayPuzzle","AbstractBoard","makeCanvas","staticPuzzle","getStaticPuzzle","dynamicPuzzle","startY","length","canvas","document","getElementById","body_content","parentHeight","getBoundingClientRect","height","parentWidth","width","style","position","top","cellLength","ctx","getContext","makePuzzleStructure","ret","i","row","j","fillPuzzle","sudokuGrid","puzzle","y","x","drawPuzzle","fillStyle","fillRect","lineWidth","strokeStyle","stroke","cellX","cellY","beginPath","rect","character","String","midx","midy","font","textSize","measureText","startX","actualBoundingBoxAscent","actualBoundingBoxDescent","fillText","Board","drawStaticPuzzle","drawDynamicPuzzle","HandleBoard","_ref","activeGame","board","console","log"],"sources":["/home/henri/Projects/WebSudoku/react-app/src/HandleBoard.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { GameState } from \"./Const\";\n// puzzle -> blocks -> cells\n\nclass Cell {\n\tconstructor() {\n\t\tthis.value = null\n\t\tthis.notes = []\n\t\tthis.mod = null; // false or true\n\t}\n\tfill(_value) {\n\t\tthis.value = _value\n\t}\n\taddNotes(number) {\n\t\tthis.notes.push(number)\n\t}\n\trmNotes() {\n\t\tthis.notes = []\n\t}\n}\n\nclass Game {\n\tconstructor(difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}\n\tupdateArrayPuzzle() {\n\n\t}\n}\n\nclass AbstractBoard {\n\tconstructor() {\n\t\tthis.makeCanvas()\n\t\tthis.staticPuzzle = this.getStaticPuzzle();\n\t\tthis.dynamicPuzzle = null;\n\t}\n\tmakeCanvas() {\n\t\tlet startY;\n\t\tlet length;\n\n\t\tlet canvas = document.getElementById('my-canvas')\n\t\tlet body_content = document.getElementById('body-content')\n\t\tlet parentHeight = body_content.getBoundingClientRect().height\n\t\tlet parentWidth = body_content.getBoundingClientRect().width\n\n\t\tif (parentHeight >= parentWidth) {\n\t\t\tlength = parentWidth * 0.8\n\t\t}\n\t\telse {\n\t\t\tlength = parentHeight * 0.85\n\t\t}\n\t\tcanvas.width = length * 1.1\n\t\tcanvas.height = length * 1.05\n\t\tcanvas.style.position = 'relative'\n\t\tcanvas.style.top = `${startY}px`\n\n\t\tthis.length = length\n\t\tthis.cellLength = length / 9\n\t\tthis.canvas = canvas\n\t\tthis.ctx = canvas.getContext('2d')\n\t\treturn\n\t}\n\tmakePuzzleStructure() {\n\t\tlet ret = []\n\t\tfor (let i = 1; i <= 9; i++) {\n\t\t\tlet row = []\n\t\t\tfor (let j = 1; j <= 9; j++) {\n\t\t\t\trow.push(new Cell())\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret;\n\t}\n\tfillPuzzle(sudokuGrid, puzzle) {\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tpuzzle[y][x].fill(sudokuGrid[y][x])\n\t\t\t}\n\t\t}\n\t}\n\tgetStaticPuzzle() {\n\t\tconst sudokuGrid = [\n\t\t\t[5, 3, 4, 6, 7, 8, 9, 1, 2],\n\t\t\t[6, 7, 2, 1, 9, 5, 3, 4, 8],\n\t\t\t[1, 9, 8, 3, 4, 2, 5, 6, 7],\n\t\t\t[8, 5, 9, 7, 6, 1, 4, 2, 3],\n\t\t\t[4, 2, 6, 8, 5, 3, 7, 9, 1],\n\t\t\t[7, 1, 3, 9, 2, 4, 8, 5, 6],\n\t\t\t[9, 6, 1, 5, 3, 7, 2, 8, 4],\n\t\t\t[2, 8, 7, 4, 1, 9, 6, 3, 5],\n\t\t\t[3, 4, 5, 2, 8, 6, 1, 7, 9]\n\t\t];\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle\n\t}\n\t/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */\n\tdrawPuzzle(puzzle) {\n\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\n\t\tthis.ctx.lineWidth = 4\n\t\tthis.ctx.strokeStyle = '#343d39'\n\t\tthis.ctx.stroke()\n\n\t\tthis.ctx.fillStyle = '#455c52'\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tlet cellX = x * this.cellLength + 10\n\t\t\t\tlet cellY = y * this.cellLength + 10\n\t\t\t\tthis.ctx.beginPath()\n\t\t\t\tthis.ctx.rect(cellX, cellY, this.cellLength, this.cellLength)\n\t\t\t\tthis.ctx.stroke()\n\n\t\t\t\tconst character = String(puzzle[y][x].value)\n\t\t\t\tif (character == 0)\n\t\t\t\t\tcontinue\n\t\t\t\tlet midx = cellX + (this.cellLength / 2)\n\t\t\t\tlet midy = cellY + (this.cellLength / 2)\n\t\t\t\tthis.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n\t\t\t\tconst textSize = this.ctx.measureText(character)\n\t\t\t\tlet startX = midx - textSize.width / 2;\n\t\t\t\tlet startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n\t\t\t\tthis.ctx.fillText(character, startX, startY)\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Board extends AbstractBoard {\n\tconstructor() {\n\t\tsuper()\n\t}\n\tdrawStaticPuzzle() {\n\t\tthis.drawPuzzle(this.staticPuzzle)\n\t}\n\tdrawDynamicPuzzle() {\n\t\t// if(!this.dynamicPuzzle)\n\t\t// \tthis.fetchDynamicPuzzle();\n\t\tthis.drawPuzzle(this.dynamicPuzzle)\n\t}\n}\n\nexport const HandleBoard = ({ activeGame }) => {\n\n\tuseEffect(() => {\n\t\tlet board = new Board();\n\t\tif (!activeGame) {\n\t\t\tconsole.log(\"drawing static puzzle\")\n\t\t\tboard.drawStaticPuzzle()\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"drawing dynamic puzzle\")\n\t\t\tboard.drawDynamicPuzzle()\n\t\t}\n\t}, [activeGame])\n\n\treturn (\n\t\t<></>\n\t)\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}