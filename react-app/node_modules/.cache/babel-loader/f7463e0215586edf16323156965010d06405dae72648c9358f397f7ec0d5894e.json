{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// puzzle -> blocks -> cells\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Cell {\n  constructor() {\n    this.value = null;\n    this.notes = [];\n    this.mod = null; // false or true\n  }\n  fill(_value) {\n    this.value = _value;\n  }\n  addNotes(number) {\n    this.notes.push(number);\n  }\n  rmNotes() {\n    this.notes = [];\n  }\n}\nclass Game {\n  constructor(difficulty) {\n    this.difficulty = difficulty;\n  }\n  updateArrayPuzzle() {}\n}\nclass AbstractBoard {\n  constructor() {\n    this.makeCanvas();\n    this.staticPuzzle = this.getStaticPuzzle();\n  }\n  makeCanvas() {\n    let startX;\n    let startY;\n    let length;\n    let canvas = document.getElementById('my-canvas');\n    let body_content = document.getElementById('body-content');\n    let parentHeight = body_content.getBoundingClientRect().height;\n    let parentWidth = body_content.getBoundingClientRect().width;\n    if (parentHeight >= parentWidth) {\n      length = parentWidth * 0.8;\n    } else {\n      length = parentHeight * 0.85;\n    }\n    // while (length % 4 != 0 && length % 9 != 0) {\n    // \tlength++\n    // }\n    startY = parentHeight * 0.1;\n    canvas.width = length * 1.1;\n    canvas.height = length * 1.05;\n    canvas.style.position = 'relative';\n    canvas.style.top = `${startY}px`;\n    canvas.style.marginBottom = '15%';\n    this.length = length;\n    this.cellLength = length / 9;\n    this.canvas = canvas;\n    console.log(this.canvas);\n    this.ctx = canvas.getContext('2d');\n    return;\n  }\n  makePuzzleStructure() {\n    let ret = [];\n    for (let i = 1; i <= 9; i++) {\n      let row = [];\n      for (let j = 1; j <= 9; j++) {\n        row.push(new Cell());\n      }\n      ret.push(row);\n    }\n    return ret;\n  }\n  fillPuzzle(sudokuGrid, puzzle) {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        puzzle[y][x].fill(sudokuGrid[y][x]);\n      }\n    }\n  }\n  getStaticPuzzle() {\n    const sudokuGrid = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 9]];\n    let puzzle = this.makePuzzleStructure();\n    this.fillPuzzle(sudokuGrid, puzzle);\n    return puzzle;\n  }\n  /**\n   * @param {Cell[][]} puzzle - 2D array of Cell objects\n   */\n  drawPuzzle(puzzle) {\n    this.ctx.fillStyle = '#bfd2cc';\n    this.ctx.fillRect(10, 10, this.length, this.length);\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = '#343d39';\n    this.ctx.stroke();\n    this.ctx.fillStyle = '#455c52';\n    for (let y = 0; y < 9; y++) {\n      console.log(\"y:\", puzzle[y]);\n      for (let x = 0; x < 9; x++) {\n        let cellX = x * this.cellLength + 10;\n        let cellY = y * this.cellLength + 10;\n        this.ctx.beginPath();\n        this.ctx.rect(cellX, cellY, this.cellLength, this.cellLength);\n        this.ctx.stroke();\n        console.log(puzzle[y][x].value);\n        console.log(typeof puzzle[y][x].value);\n        const character = String(puzzle[y][x].value);\n        if (character == 0) continue;\n        console.log(\"drawing: \", character);\n        let midx = cellX + this.cellLength / 2;\n        let midy = cellY + this.cellLength / 2;\n        this.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n        const textSize = this.ctx.measureText(character);\n        let startX = midx - textSize.width / 2;\n        let startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n        this.ctx.fillText(character, startX, startY);\n      }\n    }\n  }\n}\nclass Board extends AbstractBoard {\n  constructor() {\n    super();\n  }\n  drawStaticPuzzle() {\n    this.drawPuzzle(this.staticPuzzle);\n  }\n}\nexport const HandleBoard = () => {\n  _s();\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    let board = new Board();\n    if (!active) {\n      console.log(\"drawing static puzzle\");\n      board.drawStaticPuzzle();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(HandleBoard, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n_c = HandleBoard;\nvar _c;\n$RefreshReg$(_c, \"HandleBoard\");","map":{"version":3,"names":["useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","Cell","constructor","value","notes","mod","fill","_value","addNotes","number","push","rmNotes","Game","difficulty","updateArrayPuzzle","AbstractBoard","makeCanvas","staticPuzzle","getStaticPuzzle","startX","startY","length","canvas","document","getElementById","body_content","parentHeight","getBoundingClientRect","height","parentWidth","width","style","position","top","marginBottom","cellLength","console","log","ctx","getContext","makePuzzleStructure","ret","i","row","j","fillPuzzle","sudokuGrid","puzzle","y","x","drawPuzzle","fillStyle","fillRect","lineWidth","strokeStyle","stroke","cellX","cellY","beginPath","rect","character","String","midx","midy","font","textSize","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","fillText","Board","drawStaticPuzzle","HandleBoard","_s","active","setActive","board","_c","$RefreshReg$"],"sources":["/home/henri/Projects/WebSudoku/src/HandleBoard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n// puzzle -> blocks -> cells\n\nclass Cell {\n\tconstructor() {\n\t\tthis.value = null\n\t\tthis.notes = []\n\t\tthis.mod = null; // false or true\n\t}\n\tfill(_value) {\n\t\tthis.value = _value\n\t}\n\taddNotes(number) {\n\t\tthis.notes.push(number)\n\t}\n\trmNotes() {\n\t\tthis.notes = []\n\t}\n}\n\nclass Game {\n\tconstructor(difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}\n\tupdateArrayPuzzle() {\n\n\t}\n}\n\nclass AbstractBoard {\n\tconstructor() {\n\t\tthis.makeCanvas()\n\t\tthis.staticPuzzle = this.getStaticPuzzle();\n\t}\n\tmakeCanvas() {\n\t\tlet startX;\n\t\tlet startY;\n\t\tlet length;\n\n\t\tlet canvas = document.getElementById('my-canvas')\n\t\tlet body_content = document.getElementById('body-content')\n\t\tlet parentHeight = body_content.getBoundingClientRect().height\n\t\tlet parentWidth = body_content.getBoundingClientRect().width\n\n\t\tif (parentHeight >= parentWidth) {\n\t\t\tlength = parentWidth * 0.8\n\t\t}\n\t\telse {\n\t\t\tlength = parentHeight * 0.85\n\t\t}\n\t\t// while (length % 4 != 0 && length % 9 != 0) {\n\t\t// \tlength++\n\t\t// }\n\t\tstartY = parentHeight * 0.1\n\t\tcanvas.width = length * 1.1\n\t\tcanvas.height = length * 1.05\n\t\tcanvas.style.position = 'relative'\n\t\tcanvas.style.top = `${startY}px`\n\t\tcanvas.style.marginBottom = '15%'\n\n\t\tthis.length = length\n\t\tthis.cellLength = length / 9\n\t\tthis.canvas = canvas\n\t\tconsole.log(this.canvas)\n\t\tthis.ctx = canvas.getContext('2d')\n\t\treturn\n\t}\n\tmakePuzzleStructure() {\n\t\tlet ret = []\n\t\tfor (let i = 1; i <= 9; i++) {\n\t\t\tlet row = []\n\t\t\tfor (let j = 1; j <= 9; j++) {\n\t\t\t\trow.push(new Cell())\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret;\n\t}\n\tfillPuzzle(sudokuGrid, puzzle) {\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tpuzzle[y][x].fill(sudokuGrid[y][x])\n\t\t\t}\n\t\t}\n\t}\n\tgetStaticPuzzle() {\n\t\tconst sudokuGrid = [\n\t\t\t[5, 3, 4, 6, 7, 8, 9, 1, 2],\n\t\t\t[6, 7, 2, 1, 9, 5, 3, 4, 8],\n\t\t\t[1, 9, 8, 3, 4, 2, 5, 6, 7],\n\t\t\t[8, 5, 9, 7, 6, 1, 4, 2, 3],\n\t\t\t[4, 2, 6, 8, 5, 3, 7, 9, 1],\n\t\t\t[7, 1, 3, 9, 2, 4, 8, 5, 6],\n\t\t\t[9, 6, 1, 5, 3, 7, 2, 8, 4],\n\t\t\t[2, 8, 7, 4, 1, 9, 6, 3, 5],\n\t\t\t[3, 4, 5, 2, 8, 6, 1, 7, 9]\n\t\t];\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle\n\t}\n\t/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */\n\tdrawPuzzle(puzzle) {\n\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\n\t\tthis.ctx.lineWidth = 4\n\t\tthis.ctx.strokeStyle = '#343d39'\n\t\tthis.ctx.stroke()\n\n\t\tthis.ctx.fillStyle = '#455c52'\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tconsole.log(\"y:\", puzzle[y])\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tlet cellX = x * this.cellLength + 10\n\t\t\t\tlet cellY = y * this.cellLength + 10\n\t\t\t\tthis.ctx.beginPath()\n\t\t\t\tthis.ctx.rect(cellX, cellY, this.cellLength, this.cellLength)\n\t\t\t\tthis.ctx.stroke()\n\n\t\t\t\tconsole.log(puzzle[y][x].value)\n\t\t\t\tconsole.log(typeof (puzzle[y][x].value))\n\t\t\t\tconst character = String(puzzle[y][x].value)\n\t\t\t\tif (character == 0)\n\t\t\t\t\tcontinue\n\t\t\t\tconsole.log(\"drawing: \", character)\n\t\t\t\tlet midx = cellX + (this.cellLength / 2)\n\t\t\t\tlet midy = cellY + (this.cellLength / 2)\n\t\t\t\tthis.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n\t\t\t\tconst textSize = this.ctx.measureText(character)\n\t\t\t\tlet startX = midx - textSize.width / 2;\n\t\t\t\tlet startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n\t\t\t\tthis.ctx.fillText(character, startX, startY)\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Board extends AbstractBoard {\n\tconstructor() {\n\t\tsuper()\n\t}\n\tdrawStaticPuzzle() {\n\t\tthis.drawPuzzle(this.staticPuzzle)\n\t}\n}\n\nexport const HandleBoard = () => {\n\tconst [active, setActive] = useState(false)\n\n\tuseEffect(() => {\n\t\tlet board = new Board();\n\t\tif (!active) {\n\t\t\tconsole.log(\"drawing static puzzle\")\n\t\t\tboard.drawStaticPuzzle()\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<></>\n\t)\n}\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,CAAC;EACVC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,GAAG,GAAG,IAAI,CAAC,CAAC;EAClB;EACAC,IAAIA,CAACC,MAAM,EAAE;IACZ,IAAI,CAACJ,KAAK,GAAGI,MAAM;EACpB;EACAC,QAAQA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACL,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EACxB;EACAE,OAAOA,CAAA,EAAG;IACT,IAAI,CAACP,KAAK,GAAG,EAAE;EAChB;AACD;AAEA,MAAMQ,IAAI,CAAC;EACVV,WAAWA,CAACW,UAAU,EAAE;IACvB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC7B;EACAC,iBAAiBA,CAAA,EAAG,CAEpB;AACD;AAEA,MAAMC,aAAa,CAAC;EACnBb,WAAWA,CAAA,EAAG;IACb,IAAI,CAACc,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;EAC3C;EACAF,UAAUA,CAAA,EAAG;IACZ,IAAIG,MAAM;IACV,IAAIC,MAAM;IACV,IAAIC,MAAM;IAEV,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACjD,IAAIC,YAAY,GAAGF,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC1D,IAAIE,YAAY,GAAGD,YAAY,CAACE,qBAAqB,CAAC,CAAC,CAACC,MAAM;IAC9D,IAAIC,WAAW,GAAGJ,YAAY,CAACE,qBAAqB,CAAC,CAAC,CAACG,KAAK;IAE5D,IAAIJ,YAAY,IAAIG,WAAW,EAAE;MAChCR,MAAM,GAAGQ,WAAW,GAAG,GAAG;IAC3B,CAAC,MACI;MACJR,MAAM,GAAGK,YAAY,GAAG,IAAI;IAC7B;IACA;IACA;IACA;IACAN,MAAM,GAAGM,YAAY,GAAG,GAAG;IAC3BJ,MAAM,CAACQ,KAAK,GAAGT,MAAM,GAAG,GAAG;IAC3BC,MAAM,CAACM,MAAM,GAAGP,MAAM,GAAG,IAAI;IAC7BC,MAAM,CAACS,KAAK,CAACC,QAAQ,GAAG,UAAU;IAClCV,MAAM,CAACS,KAAK,CAACE,GAAG,GAAG,GAAGb,MAAM,IAAI;IAChCE,MAAM,CAACS,KAAK,CAACG,YAAY,GAAG,KAAK;IAEjC,IAAI,CAACb,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACc,UAAU,GAAGd,MAAM,GAAG,CAAC;IAC5B,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpBc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,MAAM,CAAC;IACxB,IAAI,CAACgB,GAAG,GAAGhB,MAAM,CAACiB,UAAU,CAAC,IAAI,CAAC;IAClC;EACD;EACAC,mBAAmBA,CAAA,EAAG;IACrB,IAAIC,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5B,IAAIC,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC5BD,GAAG,CAACjC,IAAI,CAAC,IAAIT,IAAI,CAAC,CAAC,CAAC;MACrB;MACAwC,GAAG,CAAC/B,IAAI,CAACiC,GAAG,CAAC;IACd;IACA,OAAOF,GAAG;EACX;EACAI,UAAUA,CAACC,UAAU,EAAEC,MAAM,EAAE;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3BF,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC3C,IAAI,CAACwC,UAAU,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;MACpC;IACD;EACD;EACA/B,eAAeA,CAAA,EAAG;IACjB,MAAM4B,UAAU,GAAG,CAClmBAAmB,CAAC,CAAC;IACvC,IAAI,CAACK,UAAU,CAACC,UAAU,EAAEC,MAAM,CAAC;IACnC,OAAOA,MAAM;EACd;EACA;AACD;AACA;EACCG,UAAUA,CAACH,MAAM,EAAE;IAElB,IAAI,CAACT,GAAG,CAACa,SAAS,GAAG,SAAS;IAC9B,IAAI,CAACb,GAAG,CAACc,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC/B,MAAM,EAAE,IAAI,CAACA,MAAM,CAAC;IAEnD,IAAI,CAACiB,GAAG,CAACe,SAAS,GAAG,CAAC;IACtB,IAAI,CAACf,GAAG,CAACgB,WAAW,GAAG,SAAS;IAChC,IAAI,CAAChB,GAAG,CAACiB,MAAM,CAAC,CAAC;IAEjB,IAAI,CAACjB,GAAG,CAACa,SAAS,GAAG,SAAS;IAC9B,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3BZ,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEU,MAAM,CAACC,CAAC,CAAC,CAAC;MAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIO,KAAK,GAAGP,CAAC,GAAG,IAAI,CAACd,UAAU,GAAG,EAAE;QACpC,IAAIsB,KAAK,GAAGT,CAAC,GAAG,IAAI,CAACb,UAAU,GAAG,EAAE;QACpC,IAAI,CAACG,GAAG,CAACoB,SAAS,CAAC,CAAC;QACpB,IAAI,CAACpB,GAAG,CAACqB,IAAI,CAACH,KAAK,EAAEC,KAAK,EAAE,IAAI,CAACtB,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC;QAC7D,IAAI,CAACG,GAAG,CAACiB,MAAM,CAAC,CAAC;QAEjBnB,OAAO,CAACC,GAAG,CAACU,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC9C,KAAK,CAAC;QAC/BiC,OAAO,CAACC,GAAG,CAAC,OAAQU,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC9C,KAAM,CAAC;QACxC,MAAMyD,SAAS,GAAGC,MAAM,CAACd,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC9C,KAAK,CAAC;QAC5C,IAAIyD,SAAS,IAAI,CAAC,EACjB;QACDxB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEuB,SAAS,CAAC;QACnC,IAAIE,IAAI,GAAGN,KAAK,GAAI,IAAI,CAACrB,UAAU,GAAG,CAAE;QACxC,IAAI4B,IAAI,GAAGN,KAAK,GAAI,IAAI,CAACtB,UAAU,GAAG,CAAE;QACxC,IAAI,CAACG,GAAG,CAAC0B,IAAI,GAAG,GAAG,IAAI,CAAC7B,UAAU,GAAG,GAAG,gBAAgB;QACxD,MAAM8B,QAAQ,GAAG,IAAI,CAAC3B,GAAG,CAAC4B,WAAW,CAACN,SAAS,CAAC;QAChD,IAAIzC,MAAM,GAAG2C,IAAI,GAAGG,QAAQ,CAACnC,KAAK,GAAG,CAAC;QACtC,IAAIV,MAAM,GAAG2C,IAAI,GAAG,CAACE,QAAQ,CAACE,uBAAuB,GAAGF,QAAQ,CAACG,wBAAwB,IAAI,CAAC;QAC9F,IAAI,CAAC9B,GAAG,CAAC+B,QAAQ,CAACT,SAAS,EAAEzC,MAAM,EAAEC,MAAM,CAAC;MAC7C;IACD;EACD;AACD;AAEA,MAAMkD,KAAK,SAASvD,aAAa,CAAC;EACjCb,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;EACR;EACAqE,gBAAgBA,CAAA,EAAG;IAClB,IAAI,CAACrB,UAAU,CAAC,IAAI,CAACjC,YAAY,CAAC;EACnC;AACD;AAEA,OAAO,MAAMuD,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhF,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACf,IAAIgF,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACvB,IAAI,CAACI,MAAM,EAAE;MACZtC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCuC,KAAK,CAACL,gBAAgB,CAAC,CAAC;IACzB;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCvE,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAEP,CAAC;AAAA2E,EAAA,CAdYD,WAAW;AAAAK,EAAA,GAAXL,WAAW;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}