{"ast":null,"code":"var _jsxFileName = \"/home/henri/Projects/WebSudoku/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Navbar, setUserSectionWidth } from './Navbar';\nimport './App.css';\n\n// puzzle -> blocks -> cells\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Cell {\n  constructor() {\n    this.value = null;\n    this.notes = [];\n    this.mod = null; // false or true\n  }\n  fill(_value) {\n    this.value = _value;\n  }\n  addNotes(number) {\n    this.notes.push(number);\n  }\n  rmNotes() {\n    this.notes = [];\n  }\n}\nclass Game {\n  constructor(difficulty) {\n    this.difficulty = difficulty;\n  }\n  updateArrayPuzzle() {}\n}\nclass AbstractBoard {\n  constructor() {\n    this.makeCanvas();\n    this.staticPuzzle = this.getStaticPuzzle();\n  }\n  makeCanvas() {\n    let startX;\n    let startY;\n    let length;\n    let navbar = document.getElementById('navbar');\n    let navbarrects = navbar.getBoundingClientRect();\n    console.log(navbarrects);\n    let canvas = document.createElement('canvas');\n    let body_content = document.getElementById('body-content');\n    body_content.appendChild(canvas);\n    let parentHeight = body_content.getBoundingClientRect().height;\n    let parentWidth = body_content.getBoundingClientRect().width;\n    if (parentHeight >= parentWidth) {\n      length = parentWidth * 0.8;\n    } else {\n      length = parentHeight * 0.85;\n    }\n    startX = parentWidth * 0.45 / 2;\n    startY = parentHeight * 0.1; // + (windowHeight - (navbarrects.height + length)) * 0.1\n    canvas.width = length;\n    canvas.height = length;\n    canvas.style.position = 'relative';\n    canvas.style.left = `${startX}px`;\n    canvas.style.top = `${startY}px`;\n    canvas.style.display = 'block';\n    canvas.style.marginBottom = '20%';\n    this.length = length;\n    this.cellLength = length / 9;\n    this.canvas = canvas;\n    console.log(this.canvas);\n    this.ctx = canvas.getContext('2d');\n    return;\n  }\n  makePuzzleStructure() {\n    let ret = [];\n    for (let i = 1; i <= 9; i++) {\n      let row = [];\n      for (let j = 1; j <= 9; j++) {\n        row.push(new Cell());\n      }\n      ret.push(row);\n    }\n    return ret;\n  }\n  fillPuzzle(sudokuGrid, puzzle) {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        puzzle[y][x].fill(sudokuGrid[y][x]);\n      }\n    }\n  }\n  getStaticPuzzle() {\n    const sudokuGrid = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 9]];\n    let puzzle = this.makePuzzleStructure();\n    this.fillPuzzle(sudokuGrid, puzzle);\n    return puzzle;\n  }\n  /**\n   * @param {Cell[][]} puzzle - 2D array of Cell objects\n   */\n  drawPuzzle(puzzle) {\n    // Clear canvas and set background\n    this.ctx.fillStyle = '#bfd2cc'; // Background to contrast with red\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Draw 9x9 grid\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = '#374141';\n    this.ctx.rect(2, 2, this.length - 4, this.length - 4);\n    this.ctx.stroke();\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        let cellX = x * this.cellLength;\n        let cellY = y * this.cellLength;\n        this.ctx.beginPath();\n        this.ctx.rect(cellX + 3, cellY + 3, this.cellLength, this.cellLength);\n        this.ctx.stroke();\n      }\n    }\n  }\n}\nclass Board extends AbstractBoard {\n  constructor() {\n    super();\n  }\n  drawStaticPuzzle() {\n    this.drawPuzzle(this.staticPuzzle);\n  }\n}\nconst HandleBoard = () => {\n  _s();\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    let board = new Board();\n    if (!active) {\n      console.log(\"drawing static puzzle\");\n      board.drawStaticPuzzle();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n};\n_s(HandleBoard, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n_c = HandleBoard;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body-content\",\n      children: /*#__PURE__*/_jsxDEV(HandleBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HandleBoard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","Navbar","setUserSectionWidth","jsxDEV","_jsxDEV","Fragment","_Fragment","Cell","constructor","value","notes","mod","fill","_value","addNotes","number","push","rmNotes","Game","difficulty","updateArrayPuzzle","AbstractBoard","makeCanvas","staticPuzzle","getStaticPuzzle","startX","startY","length","navbar","document","getElementById","navbarrects","getBoundingClientRect","console","log","canvas","createElement","body_content","appendChild","parentHeight","height","parentWidth","width","style","position","left","top","display","marginBottom","cellLength","ctx","getContext","makePuzzleStructure","ret","i","row","j","fillPuzzle","sudokuGrid","puzzle","y","x","drawPuzzle","fillStyle","fillRect","lineWidth","strokeStyle","rect","stroke","cellX","cellY","beginPath","Board","drawStaticPuzzle","HandleBoard","_s","active","setActive","board","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","_c2","$RefreshReg$"],"sources":["/home/henri/Projects/WebSudoku/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Navbar, setUserSectionWidth } from './Navbar';\nimport './App.css'\n\n// puzzle -> blocks -> cells\n\nclass Cell {\n\tconstructor() {\n\t\tthis.value = null\n\t\tthis.notes = []\n\t\tthis.mod = null; // false or true\n\t}\n\tfill(_value) {\n\t\tthis.value = _value\n\t}\n\taddNotes(number) {\n\t\tthis.notes.push(number)\n\t}\n\trmNotes() {\n\t\tthis.notes = []\n\t}\n}\n\nclass Game {\n\tconstructor(difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}\n\tupdateArrayPuzzle() {\n\n\t}\n}\n\nclass AbstractBoard {\n\tconstructor() {\n\t\tthis.makeCanvas()\n\t\tthis.staticPuzzle = this.getStaticPuzzle();\n\t}\n\tmakeCanvas() {\n\t\tlet startX;\n\t\tlet startY;\n\t\tlet length;\n\n\t\tlet navbar = document.getElementById('navbar')\n\t\tlet navbarrects = navbar.getBoundingClientRect()\n\t\tconsole.log(navbarrects)\n\t\tlet canvas = document.createElement('canvas')\n\t\tlet body_content = document.getElementById('body-content')\n\t\tbody_content.appendChild(canvas)\n\t\tlet parentHeight = body_content.getBoundingClientRect().height\n\t\tlet parentWidth = body_content.getBoundingClientRect().width\n\n\t\tif (parentHeight >= parentWidth) {\n\t\t\tlength = parentWidth * 0.8\n\t\t}\n\t\telse {\n\t\t\tlength = parentHeight * 0.85\n\t\t}\n\t\tstartX = (parentWidth * 0.45) / 2\n\t\tstartY = parentHeight * 0.1 // + (windowHeight - (navbarrects.height + length)) * 0.1\n\t\tcanvas.width = length\n\t\tcanvas.height = length\n\t\tcanvas.style.position = 'relative'\n\t\tcanvas.style.left = `${startX}px`\n\t\tcanvas.style.top = `${startY}px`\n\t\tcanvas.style.display = 'block'\n\t\tcanvas.style.marginBottom = '20%'\n\t\tthis.length = length\n\t\tthis.cellLength = length / 9\n\t\tthis.canvas = canvas\n\t\tconsole.log(this.canvas)\n\t\tthis.ctx = canvas.getContext('2d')\n\t\treturn\n\t}\n\tmakePuzzleStructure() {\n\t\tlet ret = []\n\t\tfor (let i = 1; i <= 9; i++) {\n\t\t\tlet row = []\n\t\t\tfor (let j = 1; j <= 9; j++) {\n\t\t\t\trow.push(new Cell())\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret;\n\t}\n\tfillPuzzle(sudokuGrid, puzzle) {\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tpuzzle[y][x].fill(sudokuGrid[y][x])\n\t\t\t}\n\t\t}\n\t}\n\tgetStaticPuzzle() {\n\t\tconst sudokuGrid = [\n\t\t\t[5, 3, 4, 6, 7, 8, 9, 1, 2],\n\t\t\t[6, 7, 2, 1, 9, 5, 3, 4, 8],\n\t\t\t[1, 9, 8, 3, 4, 2, 5, 6, 7],\n\t\t\t[8, 5, 9, 7, 6, 1, 4, 2, 3],\n\t\t\t[4, 2, 6, 8, 5, 3, 7, 9, 1],\n\t\t\t[7, 1, 3, 9, 2, 4, 8, 5, 6],\n\t\t\t[9, 6, 1, 5, 3, 7, 2, 8, 4],\n\t\t\t[2, 8, 7, 4, 1, 9, 6, 3, 5],\n\t\t\t[3, 4, 5, 2, 8, 6, 1, 7, 9]\n\t\t];\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle;\n\t}\n\t/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */\n\tdrawPuzzle(puzzle) {\n\t\t// Clear canvas and set background\n\t\tthis.ctx.fillStyle = '#bfd2cc'; // Background to contrast with red\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\t// Draw 9x9 grid\n\t\tthis.ctx.lineWidth = 4;\n\t\tthis.ctx.strokeStyle = '#374141';\n\t\tthis.ctx.rect(2, 2, this.length - 4, this.length - 4);\n\t\tthis.ctx.stroke();\n\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tlet cellX = x * this.cellLength;\n\t\t\t\tlet cellY = y * this.cellLength;\n\n\t\t\t\tthis.ctx.beginPath();\n\t\t\t\tthis.ctx.rect(cellX + 3, cellY + 3, this.cellLength, this.cellLength);\n\t\t\t\tthis.ctx.stroke();\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Board extends AbstractBoard {\n\tconstructor() {\n\t\tsuper()\n\t}\n\tdrawStaticPuzzle() {\n\t\tthis.drawPuzzle(this.staticPuzzle)\n\t}\n}\n\nconst HandleBoard = () => {\n\tconst [active, setActive] = useState(false)\n\n\tuseEffect(() => {\n\t\tlet board = new Board();\n\t\tif (!active) {\n\t\t\tconsole.log(\"drawing static puzzle\")\n\t\t\tboard.drawStaticPuzzle()\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div id=\"board-container\">\n\t\t</div>\n\t)\n}\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t<div id=\"body-content\">\n\t\t\t\t<HandleBoard />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AACtD,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,IAAI,CAAC;EACVC,WAAWA,CAAA,EAAG;IACb,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,GAAG,GAAG,IAAI,CAAC,CAAC;EAClB;EACAC,IAAIA,CAACC,MAAM,EAAE;IACZ,IAAI,CAACJ,KAAK,GAAGI,MAAM;EACpB;EACAC,QAAQA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACL,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EACxB;EACAE,OAAOA,CAAA,EAAG;IACT,IAAI,CAACP,KAAK,GAAG,EAAE;EAChB;AACD;AAEA,MAAMQ,IAAI,CAAC;EACVV,WAAWA,CAACW,UAAU,EAAE;IACvB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC7B;EACAC,iBAAiBA,CAAA,EAAG,CAEpB;AACD;AAEA,MAAMC,aAAa,CAAC;EACnBb,WAAWA,CAAA,EAAG;IACb,IAAI,CAACc,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;EAC3C;EACAF,UAAUA,CAAA,EAAG;IACZ,IAAIG,MAAM;IACV,IAAIC,MAAM;IACV,IAAIC,MAAM;IAEV,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAC9C,IAAIC,WAAW,GAAGH,MAAM,CAACI,qBAAqB,CAAC,CAAC;IAChDC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxB,IAAII,MAAM,GAAGN,QAAQ,CAACO,aAAa,CAAC,QAAQ,CAAC;IAC7C,IAAIC,YAAY,GAAGR,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAC1DO,YAAY,CAACC,WAAW,CAACH,MAAM,CAAC;IAChC,IAAII,YAAY,GAAGF,YAAY,CAACL,qBAAqB,CAAC,CAAC,CAACQ,MAAM;IAC9D,IAAIC,WAAW,GAAGJ,YAAY,CAACL,qBAAqB,CAAC,CAAC,CAACU,KAAK;IAE5D,IAAIH,YAAY,IAAIE,WAAW,EAAE;MAChCd,MAAM,GAAGc,WAAW,GAAG,GAAG;IAC3B,CAAC,MACI;MACJd,MAAM,GAAGY,YAAY,GAAG,IAAI;IAC7B;IACAd,MAAM,GAAIgB,WAAW,GAAG,IAAI,GAAI,CAAC;IACjCf,MAAM,GAAGa,YAAY,GAAG,GAAG,EAAC;IAC5BJ,MAAM,CAACO,KAAK,GAAGf,MAAM;IACrBQ,MAAM,CAACK,MAAM,GAAGb,MAAM;IACtBQ,MAAM,CAACQ,KAAK,CAACC,QAAQ,GAAG,UAAU;IAClCT,MAAM,CAACQ,KAAK,CAACE,IAAI,GAAG,GAAGpB,MAAM,IAAI;IACjCU,MAAM,CAACQ,KAAK,CAACG,GAAG,GAAG,GAAGpB,MAAM,IAAI;IAChCS,MAAM,CAACQ,KAAK,CAACI,OAAO,GAAG,OAAO;IAC9BZ,MAAM,CAACQ,KAAK,CAACK,YAAY,GAAG,KAAK;IACjC,IAAI,CAACrB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACsB,UAAU,GAAGtB,MAAM,GAAG,CAAC;IAC5B,IAAI,CAACQ,MAAM,GAAGA,MAAM;IACpBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IACxB,IAAI,CAACe,GAAG,GAAGf,MAAM,CAACgB,UAAU,CAAC,IAAI,CAAC;IAClC;EACD;EACAC,mBAAmBA,CAAA,EAAG;IACrB,IAAIC,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5B,IAAIC,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC5BD,GAAG,CAACvC,IAAI,CAAC,IAAIT,IAAI,CAAC,CAAC,CAAC;MACrB;MACA8C,GAAG,CAACrC,IAAI,CAACuC,GAAG,CAAC;IACd;IACA,OAAOF,GAAG;EACX;EACAI,UAAUA,CAACC,UAAU,EAAEC,MAAM,EAAE;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3BF,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAACjD,IAAI,CAAC8C,UAAU,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;MACpC;IACD;EACD;EACArC,eAAeA,CAAA,EAAG;IACjB,MAAMkC,UAAU,GAAG,CAClmBAAmB,CAAC,CAAC;IACvC,IAAI,CAACK,UAAU,CAACC,UAAU,EAAEC,MAAM,CAAC;IACnC,OAAOA,MAAM;EACd;EACA;AACD;AACA;EACCG,UAAUA,CAACH,MAAM,EAAE;IAClB;IACA,IAAI,CAACT,GAAG,CAACa,SAAS,GAAG,SAAS,CAAC,CAAC;IAChC,IAAI,CAACb,GAAG,CAACc,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC7B,MAAM,CAACO,KAAK,EAAE,IAAI,CAACP,MAAM,CAACK,MAAM,CAAC;;IAE9D;IACA,IAAI,CAACU,GAAG,CAACe,SAAS,GAAG,CAAC;IACtB,IAAI,CAACf,GAAG,CAACgB,WAAW,GAAG,SAAS;IAChC,IAAI,CAAChB,GAAG,CAACiB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACxC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC;IACrD,IAAI,CAACuB,GAAG,CAACkB,MAAM,CAAC,CAAC;IAEjB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIQ,KAAK,GAAGR,CAAC,GAAG,IAAI,CAACZ,UAAU;QAC/B,IAAIqB,KAAK,GAAGV,CAAC,GAAG,IAAI,CAACX,UAAU;QAE/B,IAAI,CAACC,GAAG,CAACqB,SAAS,CAAC,CAAC;QACpB,IAAI,CAACrB,GAAG,CAACiB,IAAI,CAACE,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAE,IAAI,CAACrB,UAAU,EAAE,IAAI,CAACA,UAAU,CAAC;QACrE,IAAI,CAACC,GAAG,CAACkB,MAAM,CAAC,CAAC;MAClB;IACD;EACD;AACD;AAEA,MAAMI,KAAK,SAASnD,aAAa,CAAC;EACjCb,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;EACR;EACAiE,gBAAgBA,CAAA,EAAG;IAClB,IAAI,CAACX,UAAU,CAAC,IAAI,CAACvC,YAAY,CAAC;EACnC;AACD;AAEA,MAAMmD,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9E,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACf,IAAI8E,KAAK,GAAG,IAAIN,KAAK,CAAC,CAAC;IACvB,IAAI,CAACI,MAAM,EAAE;MACZ3C,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC4C,KAAK,CAACL,gBAAgB,CAAC,CAAC;IACzB;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCrE,OAAA;IAAK2E,EAAE,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAER,CAAC;AAAAR,EAAA,CAfKD,WAAW;AAAAU,EAAA,GAAXV,WAAW;AAiBjB,MAAMW,GAAG,GAAGA,CAAA,KAAM;EACjB,oBACCjF,OAAA,CAAAE,SAAA;IAAAgF,QAAA,gBACClF,OAAA,CAACH,MAAM;MAAA+E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/E,OAAA;MAAK2E,EAAE,EAAC,cAAc;MAAAO,QAAA,eACrBlF,OAAA,CAACsE,WAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA,eACL,CAAC;AAEL,CAAC;AAAAI,GAAA,GATKF,GAAG;AAWT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}