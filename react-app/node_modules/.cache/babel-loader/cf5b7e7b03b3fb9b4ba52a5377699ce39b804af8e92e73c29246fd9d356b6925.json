{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { SOCKET_ADDRESS } from './Const';\n// puzzle -> cells\n\nclass Cell {\n  constructor() {\n    this.value = null;\n    this.notes = [];\n    this.mod = null; // false or true\n  }\n  fill(_value) {\n    this.value = _value;\n  }\n  addNotes(number) {\n    this.notes.push(number);\n  }\n  rmNotes() {\n    this.notes = [];\n  }\n}\nclass Game {\n  constructor(difficulty) {\n    this.difficulty = difficulty;\n  }\n  updateArrayPuzzle() {}\n}\nclass AbstractBoard {\n  constructor() {\n    this.makeCanvas();\n    this.staticPuzzle = this.getStaticPuzzle();\n    this.dynamicPuzzle = null;\n    this.row = null;\n    this.column = null;\n    this.msc = 10;\n  }\n  makeCanvas() {\n    let startY;\n    let length;\n    let canvas = document.getElementById('my-canvas');\n    let body_content = document.getElementById('body-content');\n    let parentHeight = body_content.getBoundingClientRect().height;\n    let parentWidth = body_content.getBoundingClientRect().width;\n    if (parentHeight >= parentWidth) {\n      length = parentWidth * 0.8;\n    } else {\n      length = parentHeight * 0.85;\n    }\n    canvas.width = length * 1.1;\n    canvas.height = length * 1.05;\n    canvas.style.position = 'relative';\n    canvas.style.top = `${startY}px`;\n    this.length = length;\n    this.cellLength = length / 9;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    return;\n  }\n  makePuzzleStructure() {\n    let ret = [];\n    for (let i = 1; i <= 9; i++) {\n      let row = [];\n      for (let j = 1; j <= 9; j++) {\n        row.push(new Cell());\n      }\n      ret.push(row);\n    }\n    return ret;\n  }\n  fillPuzzle(sudokuGrid, puzzle) {\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        puzzle[y][x].fill(sudokuGrid[y][x]);\n      }\n    }\n  }\n  getStaticPuzzle() {\n    const sudokuGrid = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 9]];\n    let puzzle = this.makePuzzleStructure();\n    this.fillPuzzle(sudokuGrid, puzzle);\n    return puzzle;\n  }\n  makeSudokuGrid(array) {\n    let ret = [];\n    for (let i = 0; array[i]; i++) {\n      const string = array[i];\n      let row = [];\n      for (let j = 0; string[j]; j++) {\n        row.push(parseInt(string[j]));\n      }\n      ret.push(row);\n    }\n    return ret;\n  }\n  makeDynamicPuzzle(array) {\n    let puzzle = this.makePuzzleStructure();\n    const sudokuGrid = this.makeSudokuGrid(array);\n    this.fillPuzzle(sudokuGrid, puzzle);\n    return puzzle;\n  }\n  clearBoard() {\n    this.ctx.fillStyle = '#bfd2cc';\n    this.ctx.fillRect(10, 10, this.length, this.length);\n  }\n  drawNotes(cellX, cellY) {\n    const dim = this.cellLength / 3;\n    let i = 0;\n    for (let line = 1; line <= 3; line++) {}\n  }\n  drawCell(cellX, cellY) {\n    this.ctx.beginPath();\n    this.ctx.rect(cellX, cellY, this.cellLength, this.cellLength);\n    this.ctx.stroke();\n  }\n  /**\n   * @param {Cell[][]} puzzle - 2D array of Cell objects\n   */\n  drawPuzzle(puzzle) {\n    this.ctx.fillStyle = '#bfd2cc';\n    this.ctx.fillRect(10, 10, this.length, this.length);\n    this.ctx.lineWidth = 4;\n    this.ctx.strokeStyle = '#343d39';\n    this.ctx.stroke();\n    this.ctx.fillStyle = '#455c52';\n    for (let y = 0; y < 9; y++) {\n      for (let x = 0; x < 9; x++) {\n        let cellX = x * this.cellLength + this.msc;\n        let cellY = y * this.cellLength + this.msc;\n        this.drawCell(cellX, cellY);\n        const character = puzzle[y][x].value;\n        if (character === 0) {\n          if (puzzle[y][x].notes.length > 0) this.drawNotes(cellX, cellY);\n          continue;\n        }\n        let midx = cellX + this.cellLength / 2;\n        let midy = cellY + this.cellLength / 2;\n        this.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n        const textSize = this.ctx.measureText(character);\n        let startX = midx - textSize.width / 2;\n        let startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n        this.ctx.fillText(character, startX, startY);\n      }\n    }\n  }\n}\nexport class Board extends AbstractBoard {\n  drawStaticPuzzle() {\n    this.drawPuzzle(this.staticPuzzle);\n  }\n  async drawDynamicPuzzle(currentLevel) {\n    console.log(\"drawDynamicPuzzle: \", currentLevel);\n    if (!this.dynamicPuzzle) this.dynamicPuzzle = await this.fetchDynamicPuzzle(currentLevel);\n    console.log(this.dynamicPuzzle);\n    this.drawPuzzle(this.dynamicPuzzle);\n  }\n  async fetchDynamicPuzzle(currentLevel) {\n    const url = \"http://\" + SOCKET_ADDRESS + '/fetchPuzzle/' + currentLevel;\n    console.log(url);\n    const arrayPuzzle = await fetch(url).then(res => {\n      return res.json();\n    }).then(data => {\n      return JSON.parse(data);\n    });\n    return this.makeDynamicPuzzle(arrayPuzzle);\n  }\n  updateSelection(clickedX, clickedY) {\n    const newcolumn = Math.floor(this.cellLength / clickedX);\n    const newrow = Math.ceil(this.cellLength / clickedY);\n    if (this.column == newcolumn && this.row == newrow) {\n      this.column = null;\n      this.newrow = null;\n      return;\n    }\n    this.column = newcolumn;\n    this.row = newrow;\n  }\n  drawSelectedCell() {\n    this.ctx.fillStyle = \"#377b70\";\n    const cellX = this.msc + this.cellLength * this.column;\n    const cellY = this.msc + this.cellLength * this.row;\n    this.drawCell(cellX, cellY);\n  }\n  draw(activeGame, currentLevel) {\n    if (!activeGame) {\n      console.log(\"drawing static puzzle\");\n      this.drawStaticPuzzle();\n    } else {\n      console.log(\"drawing dynamic puzzle level: \", currentLevel);\n      this.drawDynamicPuzzle(currentLevel);\n      if (this.column && this.row) this.drawSelectedCell();\n    }\n  }\n}","map":{"version":3,"names":["useRef","useEffect","SOCKET_ADDRESS","Cell","constructor","value","notes","mod","fill","_value","addNotes","number","push","rmNotes","Game","difficulty","updateArrayPuzzle","AbstractBoard","makeCanvas","staticPuzzle","getStaticPuzzle","dynamicPuzzle","row","column","msc","startY","length","canvas","document","getElementById","body_content","parentHeight","getBoundingClientRect","height","parentWidth","width","style","position","top","cellLength","ctx","getContext","makePuzzleStructure","ret","i","j","fillPuzzle","sudokuGrid","puzzle","y","x","makeSudokuGrid","array","string","parseInt","makeDynamicPuzzle","clearBoard","fillStyle","fillRect","drawNotes","cellX","cellY","dim","line","drawCell","beginPath","rect","stroke","drawPuzzle","lineWidth","strokeStyle","character","midx","midy","font","textSize","measureText","startX","actualBoundingBoxAscent","actualBoundingBoxDescent","fillText","Board","drawStaticPuzzle","drawDynamicPuzzle","currentLevel","console","log","fetchDynamicPuzzle","url","arrayPuzzle","fetch","then","res","json","data","JSON","parse","updateSelection","clickedX","clickedY","newcolumn","Math","floor","newrow","ceil","drawSelectedCell","draw","activeGame"],"sources":["/home/henri/Projects/WebSudoku/react-app/src/Board.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { SOCKET_ADDRESS } from './Const';\n// puzzle -> cells\n\nclass Cell {\n\tconstructor() {\n\t\tthis.value = null\n\t\tthis.notes = []\n\t\tthis.mod = null; // false or true\n\t}\n\tfill(_value) {\n\t\tthis.value = _value\n\t}\n\taddNotes(number) {\n\t\tthis.notes.push(number)\n\t}\n\trmNotes() {\n\t\tthis.notes = []\n\t}\n}\n\nclass Game {\n\tconstructor(difficulty) {\n\t\tthis.difficulty = difficulty\n\t}\n\tupdateArrayPuzzle() {\n\t}\n}\n\nclass AbstractBoard {\n\tconstructor() {\n\t\tthis.makeCanvas()\n\t\tthis.staticPuzzle = this.getStaticPuzzle()\n\t\tthis.dynamicPuzzle = null\n\t\tthis.row = null\n\t\tthis.column = null\n\t\tthis.msc = 10\n\t}\n\tmakeCanvas() {\n\t\tlet startY;\n\t\tlet length;\n\n\t\tlet canvas = document.getElementById('my-canvas')\n\t\tlet body_content = document.getElementById('body-content')\n\t\tlet parentHeight = body_content.getBoundingClientRect().height\n\t\tlet parentWidth = body_content.getBoundingClientRect().width\n\n\t\tif (parentHeight >= parentWidth) {\n\t\t\tlength = parentWidth * 0.8\n\t\t}\n\t\telse {\n\t\t\tlength = parentHeight * 0.85\n\t\t}\n\t\tcanvas.width = length * 1.1\n\t\tcanvas.height = length * 1.05\n\t\tcanvas.style.position = 'relative'\n\t\tcanvas.style.top = `${startY}px`\n\n\t\tthis.length = length\n\t\tthis.cellLength = length / 9\n\t\tthis.canvas = canvas\n\t\tthis.ctx = canvas.getContext('2d')\n\t\treturn\n\t}\n\tmakePuzzleStructure() {\n\t\tlet ret = []\n\t\tfor (let i = 1; i <= 9; i++) {\n\t\t\tlet row = []\n\t\t\tfor (let j = 1; j <= 9; j++) {\n\t\t\t\trow.push(new Cell())\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret;\n\t}\n\tfillPuzzle(sudokuGrid, puzzle) {\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tpuzzle[y][x].fill(sudokuGrid[y][x])\n\t\t\t}\n\t\t}\n\t}\n\tgetStaticPuzzle() {\n\t\tconst sudokuGrid = [\n\t\t\t[5, 3, 4, 6, 7, 8, 9, 1, 2],\n\t\t\t[6, 7, 2, 1, 9, 5, 3, 4, 8],\n\t\t\t[1, 9, 8, 3, 4, 2, 5, 6, 7],\n\t\t\t[8, 5, 9, 7, 6, 1, 4, 2, 3],\n\t\t\t[4, 2, 6, 8, 5, 3, 7, 9, 1],\n\t\t\t[7, 1, 3, 9, 2, 4, 8, 5, 6],\n\t\t\t[9, 6, 1, 5, 3, 7, 2, 8, 4],\n\t\t\t[2, 8, 7, 4, 1, 9, 6, 3, 5],\n\t\t\t[3, 4, 5, 2, 8, 6, 1, 7, 9]\n\t\t];\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle\n\t}\n\tmakeSudokuGrid(array) {\n\t\tlet ret = []\n\t\tfor (let i = 0; array[i]; i++) {\n\t\t\tconst string = array[i]\n\t\t\tlet row = []\n\t\t\tfor (let j = 0; string[j]; j++) {\n\t\t\t\trow.push(parseInt(string[j]))\n\t\t\t}\n\t\t\tret.push(row)\n\t\t}\n\t\treturn ret\n\t}\n\tmakeDynamicPuzzle(array) {\n\t\tlet puzzle = this.makePuzzleStructure()\n\t\tconst sudokuGrid = this.makeSudokuGrid(array)\n\t\tthis.fillPuzzle(sudokuGrid, puzzle)\n\t\treturn puzzle\n\t}\n\tclearBoard() {\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\t}\n\tdrawNotes(cellX, cellY) {\n\t\tconst dim = this.cellLength / 3\n\t\tlet i = 0;\n\t\tfor (let line = 1; line <= 3; line++) {\n\n\t\t}\n\n\t}\n\n\tdrawCell(cellX, cellY) {\n\t\tthis.ctx.beginPath()\n\t\tthis.ctx.rect(cellX, cellY, this.cellLength, this.cellLength)\n\t\tthis.ctx.stroke()\n\t}\n\t/**\n\t * @param {Cell[][]} puzzle - 2D array of Cell objects\n\t */\n\tdrawPuzzle(puzzle) {\n\t\tthis.ctx.fillStyle = '#bfd2cc'\n\t\tthis.ctx.fillRect(10, 10, this.length, this.length)\n\n\t\tthis.ctx.lineWidth = 4\n\t\tthis.ctx.strokeStyle = '#343d39'\n\t\tthis.ctx.stroke()\n\n\t\tthis.ctx.fillStyle = '#455c52'\n\t\tfor (let y = 0; y < 9; y++) {\n\t\t\tfor (let x = 0; x < 9; x++) {\n\t\t\t\tlet cellX = x * this.cellLength + this.msc\n\t\t\t\tlet cellY = y * this.cellLength + this.msc\n\t\t\t\tthis.drawCell(cellX, cellY)\n\t\t\t\tconst character = puzzle[y][x].value\n\t\t\t\tif (character === 0) {\n\t\t\t\t\tif (puzzle[y][x].notes.length > 0)\n\t\t\t\t\t\tthis.drawNotes(cellX, cellY)\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tlet midx = cellX + (this.cellLength / 2)\n\t\t\t\tlet midy = cellY + (this.cellLength / 2)\n\t\t\t\tthis.ctx.font = `${this.cellLength * 0.8}px Roboto Slab`;\n\t\t\t\tconst textSize = this.ctx.measureText(character)\n\t\t\t\tlet startX = midx - textSize.width / 2;\n\t\t\t\tlet startY = midy + (textSize.actualBoundingBoxAscent - textSize.actualBoundingBoxDescent) / 2;\n\t\t\t\tthis.ctx.fillText(character, startX, startY)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class Board extends AbstractBoard {\n\tdrawStaticPuzzle() {\n\t\tthis.drawPuzzle(this.staticPuzzle)\n\t}\n\tasync drawDynamicPuzzle(currentLevel) {\n\t\tconsole.log(\"drawDynamicPuzzle: \", currentLevel)\n\t\tif (!this.dynamicPuzzle)\n\t\t\tthis.dynamicPuzzle = await this.fetchDynamicPuzzle(currentLevel);\n\t\tconsole.log(this.dynamicPuzzle)\n\t\tthis.drawPuzzle(this.dynamicPuzzle)\n\t}\n\tasync fetchDynamicPuzzle(currentLevel) {\n\t\tconst url = \"http://\" + SOCKET_ADDRESS + '/fetchPuzzle/' + currentLevel\n\t\tconsole.log(url)\n\t\tconst arrayPuzzle = await fetch(url).then((res) => {\n\t\t\treturn res.json()\n\t\t}\n\t\t).then((data) => {\n\t\t\treturn JSON.parse(data)\n\t\t})\n\t\treturn this.makeDynamicPuzzle(arrayPuzzle)\n\t}\n\tupdateSelection(clickedX, clickedY) {\n\t\tconst newcolumn = Math.floor(this.cellLength / clickedX)\n\t\tconst newrow = Math.ceil(this.cellLength / clickedY)\n\t\tif (this.column == newcolumn && this.row == newrow) {\n\t\t\tthis.column = null;\n\t\t\tthis.newrow = null;\n\t\t\treturn\n\t\t}\n\t\tthis.column = newcolumn\n\t\tthis.row = newrow\n\t}\n\tdrawSelectedCell() {\n\t\tthis.ctx.fillStyle = \"#377b70\"\n\t\tconst cellX = this.msc + this.cellLength * this.column\n\t\tconst cellY = this.msc + this.cellLength * this.row\n\t\tthis.drawCell(cellX, cellY)\n\t}\n\tdraw(activeGame, currentLevel) {\n\t\tif (!activeGame) {\n\t\t\tconsole.log(\"drawing static puzzle\")\n\t\t\tthis.drawStaticPuzzle()\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"drawing dynamic puzzle level: \", currentLevel)\n\t\t\tthis.drawDynamicPuzzle(currentLevel)\n\t\t\tif (this.column && this.row)\n\t\t\t\tthis.drawSelectedCell()\n\t\t}\n\t}\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}